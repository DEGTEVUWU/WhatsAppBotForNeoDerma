spring.application.name=WhatsAppBotForNeoDerma

#environment variables for local use
chatPush.api.key=${CHATPUSH_API_KEY:default_value_if_not_set}
ngrok.url=${NGROK_URL:default_value_if_not_set}
open.ai.token=${OPEN_AI_TOKEN:default_value_if_not_set}
yclient.token=${YCLIENT_TOKEN:default_value_if_not_set}

amocrm.token=${AMOCRM_TOKEN:default_value_if_not_exist}
notion.token=${NOTION_TOKEN:default_value_if_not_exist}

amocrm.api.url=https://neoderma.amocrm.ru/api/v4

#database for local
spring.datasource.url=jdbc:postgresql://localhost:5432/neoderma
spring.datasource.username=ivan
spring.datasource.password=password

#database for docker-compose
#spring.datasource.url=jdbc:postgresql://whatsapp_bot_for_neoderma_db:5444/neoderma
#spring.datasource.username=ivan
#spring.datasource.password=password


spring.jpa.show-sql=true
spring.sql.init.mode=always
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true
spring.datasource.driver-class-name=org.postgresql.Driver

#Logging
logging.level.org.springframework = INFO
logging.file.path=logs/
logging.file.name=logs/application.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=100

#langchain4j.open-ai.chat-model.log-requests = true
#langchain4j.open-ai.chat-model.log-responses = true
logging.level.dev.langchain4j = DEBUG
logging.level.dev.ai4j.openai4j = DEBUG